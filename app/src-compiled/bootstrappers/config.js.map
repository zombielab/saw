{"version":3,"sources":["../../src/bootstrappers/config.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,YAAN,CAAmB;AACf,WAAO,SAAP,CAAiB,GAAjB,EAAsB;AAClB;AACA,YAAI,QAAQ,aAAG,WAAH,CAAe,eAAK,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8B,QAA9B,CAAf,CAAZ;;AAEA,aAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;AACnB,gBAAI,OAAO,MAAM,GAAN,CAAX;;AAEA;AACA,gBAAI,KAAK,QAAL,CAAc,KAAd,MAAyB,KAA7B,EAAoC;AAChC;AACH;;AAED;AACA,gCAAO,GAAP,CAAW,KAAK,MAAL,CAAY,CAAZ,EAAe,KAAK,MAAL,GAAc,CAA7B,CAAX,EAA4C,QAAQ,eAAK,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC,IAAxC,CAAR,EAAuD,OAAnG;AACH;AACJ;AAhBc;;kBAmBJ,Y","file":"config.js","sourcesContent":["\"use strict\";\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport config from \"saw-config\";\n\nclass Bootstrapper {\n    static bootstrap(app) {\n        // Read directory content\n        var files = fs.readdirSync(path.resolve(__dirname, \"..\", \"config\"));\n\n        for (var key in files) {\n            let file = files[key];\n\n            // We make sure it's a javascript file (just in case)\n            if (file.endsWith(\".js\") === false) {\n                continue;\n            }\n\n            // Load and inject file data into config\n            config.set(file.substr(0, file.length - 3), require(path.resolve(__dirname, \"..\", \"config\", file)).default);\n        }\n    }\n}\n\nexport default Bootstrapper;"]}